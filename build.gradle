plugins {
    id("groovy")
    id("com.github.johnrengelman.shadow") version "6.1.0"
    id("io.micronaut.application") version "1.2.0"
}

version = "0.1"
group = "com.mruhwedel"

repositories {
    mavenCentral()
    jcenter()
}

micronaut {
    runtime("netty")
    testRuntime("spock2")
    processing {
        incremental(true)
        annotations("com.mruhwedel.*")
    }
}

ext {
    VERSION_LOMBOK = '1.18.16'
}

dependencies {
    // micronaut dependencies
    implementation("io.micronaut:micronaut-validation")
    implementation("io.micronaut:micronaut-runtime")
    implementation("javax.annotation:javax.annotation-api")
    implementation("io.micronaut:micronaut-http-client")
    runtimeOnly("ch.qos.logback:logback-classic")

    // my dependencies
    annotationProcessor "org.projectlombok:lombok:$VERSION_LOMBOK"
    compile 'com.google.guava:guava:28.0-jre'
    compile "org.influxdb:influxdb-java:2.21"
    compileOnly("org.projectlombok:lombok:$VERSION_LOMBOK") {
        because 'Syntactical sugar. See https://projectlombok.org/'
    }

}


application {
    mainClass.set("com.mruhwedel.Application")
}

java {
    sourceCompatibility = JavaVersion.toVersion("11")
    targetCompatibility = JavaVersion.toVersion("11")
}

task influxDbStart(type: Exec) {
    commandLine 'docker', 'run',
            '--name', 'influxdb',
            '--rm',
            '-e', 'INFLUXDB_DATA_QUERY_LOG_ENABLED=true', // debugging
            '-e', 'INFLUXDB_DB=sensors', // will bootstrap a db
            '-e', 'INFLUXDB_HTTP_FLUX_ENABLED=true', // needed for the queries we use
            '-p', '8086:8086',
            '-v', 'influxdb:/var/lib/influxdb',
            'influxdb:1.8-alpine'
}

tasks {
}

